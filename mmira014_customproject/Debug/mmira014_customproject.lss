
mmira014_customproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000c6c  00000d00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000203  00800130  00800130  00000d30  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019c3  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa0  00000000  00000000  00002863  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d3c  00000000  00000000  00003303  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00004040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000876  00000000  00000000  00004304  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001517  00000000  00000000  00004b7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  00006091  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	dc c1       	rjmp	.+952    	; 0x3ee <__vector_13>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	ec e6       	ldi	r30, 0x6C	; 108
 280:	fc e0       	ldi	r31, 0x0C	; 12
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a0 33       	cpi	r26, 0x30	; 48
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	23 e0       	ldi	r18, 0x03	; 3
 294:	a0 e3       	ldi	r26, 0x30	; 48
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a3 33       	cpi	r26, 0x33	; 51
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	12 d4       	rcall	.+2084   	; 0xac8 <main>
 2a4:	e1 c4       	rjmp	.+2498   	; 0xc68 <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <write>:
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
 2a8:	29 98       	cbi	0x05, 1	; 5
 2aa:	66 23       	and	r22, r22
 2ac:	11 f0       	breq	.+4      	; 0x2b2 <write+0xa>
 2ae:	2a 9a       	sbi	0x05, 2	; 5
 2b0:	15 c0       	rjmp	.+42     	; 0x2dc <write+0x34>
 2b2:	2a 98       	cbi	0x05, 2	; 5
 2b4:	13 c0       	rjmp	.+38     	; 0x2dc <write+0x34>
 2b6:	ac 01       	movw	r20, r24
 2b8:	02 2e       	mov	r0, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <write+0x18>
 2bc:	55 95       	asr	r21
 2be:	47 95       	ror	r20
 2c0:	0a 94       	dec	r0
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <write+0x14>
 2c4:	40 ff       	sbrs	r20, 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <write+0x24>
 2c8:	2b 9a       	sbi	0x05, 3	; 5
 2ca:	01 c0       	rjmp	.+2      	; 0x2ce <write+0x26>
 2cc:	2b 98       	cbi	0x05, 3	; 5
 2ce:	2c 9a       	sbi	0x05, 4	; 5
 2d0:	2c 98       	cbi	0x05, 4	; 5
 2d2:	21 50       	subi	r18, 0x01	; 1
 2d4:	31 09       	sbc	r19, r1
 2d6:	78 f7       	brcc	.-34     	; 0x2b6 <write+0xe>
 2d8:	29 9a       	sbi	0x05, 1	; 5
 2da:	08 95       	ret
 2dc:	27 e0       	ldi	r18, 0x07	; 7
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	e9 cf       	rjmp	.-46     	; 0x2b6 <write+0xe>

000002e4 <write_cmd>:
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	e0 cf       	rjmp	.-64     	; 0x2a8 <write>
 2e8:	08 95       	ret

000002ea <Servo_tick>:
 2ea:	81 30       	cpi	r24, 0x01	; 1
 2ec:	91 05       	cpc	r25, r1
 2ee:	39 f0       	breq	.+14     	; 0x2fe <Servo_tick+0x14>
 2f0:	1c f4       	brge	.+6      	; 0x2f8 <Servo_tick+0xe>
 2f2:	89 2b       	or	r24, r25
 2f4:	71 f0       	breq	.+28     	; 0x312 <Servo_tick+0x28>
 2f6:	1e c0       	rjmp	.+60     	; 0x334 <Servo_tick+0x4a>
 2f8:	04 97       	sbiw	r24, 0x04	; 4
 2fa:	e4 f4       	brge	.+56     	; 0x334 <Servo_tick+0x4a>
 2fc:	0a c0       	rjmp	.+20     	; 0x312 <Servo_tick+0x28>
 2fe:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 302:	88 23       	and	r24, r24
 304:	31 f0       	breq	.+12     	; 0x312 <Servo_tick+0x28>
 306:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <status>
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	39 f0       	breq	.+14     	; 0x31c <Servo_tick+0x32>
 30e:	88 23       	and	r24, r24
 310:	59 f0       	breq	.+22     	; 0x328 <Servo_tick+0x3e>
 312:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <servo>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	08 95       	ret
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <servo>
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	08 95       	ret
 328:	82 e0       	ldi	r24, 0x02	; 2
 32a:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <servo>
 32e:	83 e0       	ldi	r24, 0x03	; 3
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	08 95       	ret
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	08 95       	ret

0000033a <LCD_tick>:
 33a:	02 97       	sbiw	r24, 0x02	; 2
 33c:	00 f5       	brcc	.+64     	; 0x37e <LCD_tick+0x44>
 33e:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <status>
 342:	81 30       	cpi	r24, 0x01	; 1
 344:	71 f4       	brne	.+28     	; 0x362 <LCD_tick+0x28>
 346:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <lock_str>
 34a:	87 e0       	ldi	r24, 0x07	; 7
 34c:	e0 e2       	ldi	r30, 0x20	; 32
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	a4 e1       	ldi	r26, 0x14	; 20
 352:	b1 e0       	ldi	r27, 0x01	; 1
 354:	01 90       	ld	r0, Z+
 356:	0d 92       	st	X+, r0
 358:	8a 95       	dec	r24
 35a:	e1 f7       	brne	.-8      	; 0x354 <LCD_tick+0x1a>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	08 95       	ret
 362:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <lock_str>
 366:	88 e0       	ldi	r24, 0x08	; 8
 368:	e7 e2       	ldi	r30, 0x27	; 39
 36a:	f1 e0       	ldi	r31, 0x01	; 1
 36c:	a4 e1       	ldi	r26, 0x14	; 20
 36e:	b1 e0       	ldi	r27, 0x01	; 1
 370:	01 90       	ld	r0, Z+
 372:	0d 92       	st	X+, r0
 374:	8a 95       	dec	r24
 376:	e1 f7       	brne	.-8      	; 0x370 <LCD_tick+0x36>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	08 95       	ret
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	08 95       	ret

00000384 <TimerSet>:
 384:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <_avr_timer_M>
 388:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <_avr_timer_M+0x1>
 38c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_avr_timer_M+0x2>
 390:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <_avr_timer_M+0x3>
 394:	60 93 2c 03 	sts	0x032C, r22	; 0x80032c <_avr_timer_cntcurr>
 398:	70 93 2d 03 	sts	0x032D, r23	; 0x80032d <_avr_timer_cntcurr+0x1>
 39c:	80 93 2e 03 	sts	0x032E, r24	; 0x80032e <_avr_timer_cntcurr+0x2>
 3a0:	90 93 2f 03 	sts	0x032F, r25	; 0x80032f <_avr_timer_cntcurr+0x3>
 3a4:	08 95       	ret

000003a6 <TimerOn>:
 3a6:	8b e0       	ldi	r24, 0x0B	; 11
 3a8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 3ac:	8d e7       	ldi	r24, 0x7D	; 125
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3b4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 3b8:	82 e0       	ldi	r24, 0x02	; 2
 3ba:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 3be:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3c2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 3c6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <_avr_timer_M>
 3ca:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <_avr_timer_M+0x1>
 3ce:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <_avr_timer_M+0x2>
 3d2:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <_avr_timer_M+0x3>
 3d6:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <_avr_timer_cntcurr>
 3da:	90 93 2d 03 	sts	0x032D, r25	; 0x80032d <_avr_timer_cntcurr+0x1>
 3de:	a0 93 2e 03 	sts	0x032E, r26	; 0x80032e <_avr_timer_cntcurr+0x2>
 3e2:	b0 93 2f 03 	sts	0x032F, r27	; 0x80032f <_avr_timer_cntcurr+0x3>
 3e6:	8f b7       	in	r24, 0x3f	; 63
 3e8:	80 68       	ori	r24, 0x80	; 128
 3ea:	8f bf       	out	0x3f, r24	; 63
 3ec:	08 95       	ret

000003ee <__vector_13>:
 3ee:	1f 92       	push	r1
 3f0:	0f 92       	push	r0
 3f2:	0f b6       	in	r0, 0x3f	; 63
 3f4:	0f 92       	push	r0
 3f6:	11 24       	eor	r1, r1
 3f8:	8f 93       	push	r24
 3fa:	9f 93       	push	r25
 3fc:	af 93       	push	r26
 3fe:	bf 93       	push	r27
 400:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <_avr_timer_cntcurr>
 404:	90 91 2d 03 	lds	r25, 0x032D	; 0x80032d <_avr_timer_cntcurr+0x1>
 408:	a0 91 2e 03 	lds	r26, 0x032E	; 0x80032e <_avr_timer_cntcurr+0x2>
 40c:	b0 91 2f 03 	lds	r27, 0x032F	; 0x80032f <_avr_timer_cntcurr+0x3>
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	a1 09       	sbc	r26, r1
 414:	b1 09       	sbc	r27, r1
 416:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <_avr_timer_cntcurr>
 41a:	90 93 2d 03 	sts	0x032D, r25	; 0x80032d <_avr_timer_cntcurr+0x1>
 41e:	a0 93 2e 03 	sts	0x032E, r26	; 0x80032e <_avr_timer_cntcurr+0x2>
 422:	b0 93 2f 03 	sts	0x032F, r27	; 0x80032f <_avr_timer_cntcurr+0x3>
 426:	89 2b       	or	r24, r25
 428:	8a 2b       	or	r24, r26
 42a:	8b 2b       	or	r24, r27
 42c:	99 f4       	brne	.+38     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	80 93 30 03 	sts	0x0330, r24	; 0x800330 <TimerFlag>
 434:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <_avr_timer_M>
 438:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <_avr_timer_M+0x1>
 43c:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <_avr_timer_M+0x2>
 440:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <_avr_timer_M+0x3>
 444:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <_avr_timer_cntcurr>
 448:	90 93 2d 03 	sts	0x032D, r25	; 0x80032d <_avr_timer_cntcurr+0x1>
 44c:	a0 93 2e 03 	sts	0x032E, r26	; 0x80032e <_avr_timer_cntcurr+0x2>
 450:	b0 93 2f 03 	sts	0x032F, r27	; 0x80032f <_avr_timer_cntcurr+0x3>
 454:	bf 91       	pop	r27
 456:	af 91       	pop	r26
 458:	9f 91       	pop	r25
 45a:	8f 91       	pop	r24
 45c:	0f 90       	pop	r0
 45e:	0f be       	out	0x3f, r0	; 63
 460:	0f 90       	pop	r0
 462:	1f 90       	pop	r1
 464:	18 95       	reti

00000466 <initUSART>:
 466:	81 30       	cpi	r24, 0x01	; 1
 468:	81 f0       	breq	.+32     	; 0x48a <initUSART+0x24>
 46a:	e1 ec       	ldi	r30, 0xC1	; 193
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	80 81       	ld	r24, Z
 470:	88 61       	ori	r24, 0x18	; 24
 472:	80 83       	st	Z, r24
 474:	e2 ec       	ldi	r30, 0xC2	; 194
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	80 81       	ld	r24, Z
 47a:	86 60       	ori	r24, 0x06	; 6
 47c:	80 83       	st	Z, r24
 47e:	83 e3       	ldi	r24, 0x33	; 51
 480:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 484:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 488:	08 95       	ret
 48a:	e9 ec       	ldi	r30, 0xC9	; 201
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	88 61       	ori	r24, 0x18	; 24
 492:	80 83       	st	Z, r24
 494:	ea ec       	ldi	r30, 0xCA	; 202
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	86 60       	ori	r24, 0x06	; 6
 49c:	80 83       	st	Z, r24
 49e:	83 e3       	ldi	r24, 0x33	; 51
 4a0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 4a4:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 4a8:	08 95       	ret

000004aa <USART_Flush>:
 4aa:	81 30       	cpi	r24, 0x01	; 1
 4ac:	29 f4       	brne	.+10     	; 0x4b8 <USART_Flush+0xe>
 4ae:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 4b2:	88 23       	and	r24, r24
 4b4:	74 f0       	brlt	.+28     	; 0x4d2 <USART_Flush+0x28>
 4b6:	08 95       	ret
 4b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4bc:	88 23       	and	r24, r24
 4be:	8c f4       	brge	.+34     	; 0x4e2 <USART_Flush+0x38>
 4c0:	a6 ec       	ldi	r26, 0xC6	; 198
 4c2:	b0 e0       	ldi	r27, 0x00	; 0
 4c4:	e0 ec       	ldi	r30, 0xC0	; 192
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	8c 91       	ld	r24, X
 4ca:	80 81       	ld	r24, Z
 4cc:	88 23       	and	r24, r24
 4ce:	e4 f3       	brlt	.-8      	; 0x4c8 <USART_Flush+0x1e>
 4d0:	08 95       	ret
 4d2:	ae ec       	ldi	r26, 0xCE	; 206
 4d4:	b0 e0       	ldi	r27, 0x00	; 0
 4d6:	e8 ec       	ldi	r30, 0xC8	; 200
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	8c 91       	ld	r24, X
 4dc:	80 81       	ld	r24, Z
 4de:	88 23       	and	r24, r24
 4e0:	e4 f3       	brlt	.-8      	; 0x4da <USART_Flush+0x30>
 4e2:	08 95       	ret

000004e4 <USART_Receive>:
 4e4:	81 30       	cpi	r24, 0x01	; 1
 4e6:	41 f0       	breq	.+16     	; 0x4f8 <USART_Receive+0x14>
 4e8:	e0 ec       	ldi	r30, 0xC0	; 192
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	80 81       	ld	r24, Z
 4ee:	88 23       	and	r24, r24
 4f0:	ec f7       	brge	.-6      	; 0x4ec <USART_Receive+0x8>
 4f2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4f6:	08 95       	ret
 4f8:	e8 ec       	ldi	r30, 0xC8	; 200
 4fa:	f0 e0       	ldi	r31, 0x00	; 0
 4fc:	80 81       	ld	r24, Z
 4fe:	88 23       	and	r24, r24
 500:	ec f7       	brge	.-6      	; 0x4fc <USART_Receive+0x18>
 502:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 506:	08 95       	ret

00000508 <Bluetooth_tick>:
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	ec 01       	movw	r28, r24
 50e:	81 30       	cpi	r24, 0x01	; 1
 510:	91 05       	cpc	r25, r1
 512:	39 f0       	breq	.+14     	; 0x522 <Bluetooth_tick+0x1a>
 514:	1c f4       	brge	.+6      	; 0x51c <Bluetooth_tick+0x14>
 516:	89 2b       	or	r24, r25
 518:	b1 f0       	breq	.+44     	; 0x546 <Bluetooth_tick+0x3e>
 51a:	2f c0       	rjmp	.+94     	; 0x57a <Bluetooth_tick+0x72>
 51c:	04 97       	sbiw	r24, 0x04	; 4
 51e:	6c f5       	brge	.+90     	; 0x57a <Bluetooth_tick+0x72>
 520:	12 c0       	rjmp	.+36     	; 0x546 <Bluetooth_tick+0x3e>
 522:	80 e0       	ldi	r24, 0x00	; 0
 524:	a0 df       	rcall	.-192    	; 0x466 <initUSART>
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	dd df       	rcall	.-70     	; 0x4e4 <USART_Receive>
 52a:	83 70       	andi	r24, 0x03	; 3
 52c:	82 30       	cpi	r24, 0x02	; 2
 52e:	19 f0       	breq	.+6      	; 0x536 <Bluetooth_tick+0x2e>
 530:	81 30       	cpi	r24, 0x01	; 1
 532:	31 f4       	brne	.+12     	; 0x540 <Bluetooth_tick+0x38>
 534:	03 c0       	rjmp	.+6      	; 0x53c <Bluetooth_tick+0x34>
 536:	c2 e0       	ldi	r28, 0x02	; 2
 538:	d0 e0       	ldi	r29, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <Bluetooth_tick+0x38>
 53c:	c3 e0       	ldi	r28, 0x03	; 3
 53e:	d0 e0       	ldi	r29, 0x00	; 0
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	b3 df       	rcall	.-154    	; 0x4aa <USART_Flush>
 544:	02 c0       	rjmp	.+4      	; 0x54a <Bluetooth_tick+0x42>
 546:	c1 e0       	ldi	r28, 0x01	; 1
 548:	d0 e0       	ldi	r29, 0x00	; 0
 54a:	c2 30       	cpi	r28, 0x02	; 2
 54c:	d1 05       	cpc	r29, r1
 54e:	49 f0       	breq	.+18     	; 0x562 <Bluetooth_tick+0x5a>
 550:	c3 30       	cpi	r28, 0x03	; 3
 552:	d1 05       	cpc	r29, r1
 554:	61 f0       	breq	.+24     	; 0x56e <Bluetooth_tick+0x66>
 556:	c1 30       	cpi	r28, 0x01	; 1
 558:	d1 05       	cpc	r29, r1
 55a:	89 f4       	brne	.+34     	; 0x57e <Bluetooth_tick+0x76>
 55c:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
 560:	0e c0       	rjmp	.+28     	; 0x57e <Bluetooth_tick+0x76>
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 568:	80 93 32 03 	sts	0x0332, r24	; 0x800332 <status>
 56c:	08 c0       	rjmp	.+16     	; 0x57e <Bluetooth_tick+0x76>
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 574:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <status>
 578:	02 c0       	rjmp	.+4      	; 0x57e <Bluetooth_tick+0x76>
 57a:	c0 e0       	ldi	r28, 0x00	; 0
 57c:	d0 e0       	ldi	r29, 0x00	; 0
 57e:	ce 01       	movw	r24, r28
 580:	df 91       	pop	r29
 582:	cf 91       	pop	r28
 584:	08 95       	ret

00000586 <nokia_lcd_init>:
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	21 9a       	sbi	0x04, 1	; 4
 58c:	20 9a       	sbi	0x04, 0	; 4
 58e:	22 9a       	sbi	0x04, 2	; 4
 590:	23 9a       	sbi	0x04, 3	; 4
 592:	24 9a       	sbi	0x04, 4	; 4
 594:	28 9a       	sbi	0x05, 0	; 5
 596:	29 9a       	sbi	0x05, 1	; 5
 598:	83 ec       	ldi	r24, 0xC3	; 195
 59a:	99 e0       	ldi	r25, 0x09	; 9
 59c:	01 97       	sbiw	r24, 0x01	; 1
 59e:	f1 f7       	brne	.-4      	; 0x59c <nokia_lcd_init+0x16>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <nokia_lcd_init+0x1c>
 5a2:	00 00       	nop
 5a4:	28 98       	cbi	0x05, 0	; 5
 5a6:	8b e5       	ldi	r24, 0x5B	; 91
 5a8:	94 e4       	ldi	r25, 0x44	; 68
 5aa:	01 97       	sbiw	r24, 0x01	; 1
 5ac:	f1 f7       	brne	.-4      	; 0x5aa <nokia_lcd_init+0x24>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <nokia_lcd_init+0x2a>
 5b0:	00 00       	nop
 5b2:	28 9a       	sbi	0x05, 0	; 5
 5b4:	29 98       	cbi	0x05, 1	; 5
 5b6:	81 e2       	ldi	r24, 0x21	; 33
 5b8:	95 de       	rcall	.-726    	; 0x2e4 <write_cmd>
 5ba:	83 e1       	ldi	r24, 0x13	; 19
 5bc:	93 de       	rcall	.-730    	; 0x2e4 <write_cmd>
 5be:	86 e0       	ldi	r24, 0x06	; 6
 5c0:	91 de       	rcall	.-734    	; 0x2e4 <write_cmd>
 5c2:	82 ec       	ldi	r24, 0xC2	; 194
 5c4:	8f de       	rcall	.-738    	; 0x2e4 <write_cmd>
 5c6:	80 e2       	ldi	r24, 0x20	; 32
 5c8:	8d de       	rcall	.-742    	; 0x2e4 <write_cmd>
 5ca:	89 e0       	ldi	r24, 0x09	; 9
 5cc:	8b de       	rcall	.-746    	; 0x2e4 <write_cmd>
 5ce:	80 e8       	ldi	r24, 0x80	; 128
 5d0:	89 de       	rcall	.-750    	; 0x2e4 <write_cmd>
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	87 de       	rcall	.-754    	; 0x2e4 <write_cmd>
 5d6:	c8 ef       	ldi	r28, 0xF8	; 248
 5d8:	d1 e0       	ldi	r29, 0x01	; 1
 5da:	61 e0       	ldi	r22, 0x01	; 1
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	64 de       	rcall	.-824    	; 0x2a8 <write>
 5e0:	21 97       	sbiw	r28, 0x01	; 1
 5e2:	d9 f7       	brne	.-10     	; 0x5da <nokia_lcd_init+0x54>
 5e4:	88 e0       	ldi	r24, 0x08	; 8
 5e6:	7e de       	rcall	.-772    	; 0x2e4 <write_cmd>
 5e8:	8c e0       	ldi	r24, 0x0C	; 12
 5ea:	7c de       	rcall	.-776    	; 0x2e4 <write_cmd>
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	08 95       	ret

000005f2 <nokia_lcd_clear>:
 5f2:	80 e8       	ldi	r24, 0x80	; 128
 5f4:	77 de       	rcall	.-786    	; 0x2e4 <write_cmd>
 5f6:	80 e4       	ldi	r24, 0x40	; 64
 5f8:	75 de       	rcall	.-790    	; 0x2e4 <write_cmd>
 5fa:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <nokia_lcd+0x1f8>
 5fe:	10 92 2b 03 	sts	0x032B, r1	; 0x80032b <nokia_lcd+0x1f9>
 602:	e2 e3       	ldi	r30, 0x32	; 50
 604:	f1 e0       	ldi	r31, 0x01	; 1
 606:	8a e2       	ldi	r24, 0x2A	; 42
 608:	93 e0       	ldi	r25, 0x03	; 3
 60a:	11 92       	st	Z+, r1
 60c:	e8 17       	cp	r30, r24
 60e:	f9 07       	cpc	r31, r25
 610:	e1 f7       	brne	.-8      	; 0x60a <nokia_lcd_clear+0x18>
 612:	08 95       	ret

00000614 <nokia_lcd_set_pixel>:
 614:	26 2f       	mov	r18, r22
 616:	26 95       	lsr	r18
 618:	26 95       	lsr	r18
 61a:	26 95       	lsr	r18
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	34 e5       	ldi	r19, 0x54	; 84
 620:	23 9f       	mul	r18, r19
 622:	80 0d       	add	r24, r0
 624:	91 1d       	adc	r25, r1
 626:	11 24       	eor	r1, r1
 628:	44 23       	and	r20, r20
 62a:	79 f0       	breq	.+30     	; 0x64a <nokia_lcd_set_pixel+0x36>
 62c:	fc 01       	movw	r30, r24
 62e:	ee 5c       	subi	r30, 0xCE	; 206
 630:	fe 4f       	sbci	r31, 0xFE	; 254
 632:	67 70       	andi	r22, 0x07	; 7
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <nokia_lcd_set_pixel+0x2a>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	6a 95       	dec	r22
 640:	e2 f7       	brpl	.-8      	; 0x63a <nokia_lcd_set_pixel+0x26>
 642:	90 81       	ld	r25, Z
 644:	89 2b       	or	r24, r25
 646:	80 83       	st	Z, r24
 648:	08 95       	ret
 64a:	fc 01       	movw	r30, r24
 64c:	ee 5c       	subi	r30, 0xCE	; 206
 64e:	fe 4f       	sbci	r31, 0xFE	; 254
 650:	67 70       	andi	r22, 0x07	; 7
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	02 c0       	rjmp	.+4      	; 0x65c <nokia_lcd_set_pixel+0x48>
 658:	88 0f       	add	r24, r24
 65a:	99 1f       	adc	r25, r25
 65c:	6a 95       	dec	r22
 65e:	e2 f7       	brpl	.-8      	; 0x658 <nokia_lcd_set_pixel+0x44>
 660:	80 95       	com	r24
 662:	90 81       	ld	r25, Z
 664:	89 23       	and	r24, r25
 666:	80 83       	st	Z, r24
 668:	08 95       	ret

0000066a <nokia_lcd_write_char>:
 66a:	5f 92       	push	r5
 66c:	6f 92       	push	r6
 66e:	7f 92       	push	r7
 670:	8f 92       	push	r8
 672:	9f 92       	push	r9
 674:	af 92       	push	r10
 676:	bf 92       	push	r11
 678:	cf 92       	push	r12
 67a:	df 92       	push	r13
 67c:	ef 92       	push	r14
 67e:	ff 92       	push	r15
 680:	0f 93       	push	r16
 682:	1f 93       	push	r17
 684:	cf 93       	push	r28
 686:	df 93       	push	r29
 688:	56 2e       	mov	r5, r22
 68a:	26 2f       	mov	r18, r22
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	49 01       	movw	r8, r18
 690:	88 0c       	add	r8, r8
 692:	99 1c       	adc	r9, r9
 694:	88 0c       	add	r8, r8
 696:	99 1c       	adc	r9, r9
 698:	82 0e       	add	r8, r18
 69a:	93 1e       	adc	r9, r19
 69c:	18 14       	cp	r1, r8
 69e:	19 04       	cpc	r1, r9
 6a0:	0c f0       	brlt	.+2      	; 0x6a4 <nokia_lcd_write_char+0x3a>
 6a2:	59 c0       	rjmp	.+178    	; 0x756 <nokia_lcd_write_char+0xec>
 6a4:	89 01       	movw	r16, r18
 6a6:	00 0f       	add	r16, r16
 6a8:	11 1f       	adc	r17, r17
 6aa:	00 0f       	add	r16, r16
 6ac:	11 1f       	adc	r17, r17
 6ae:	00 0f       	add	r16, r16
 6b0:	11 1f       	adc	r17, r17
 6b2:	02 1b       	sub	r16, r18
 6b4:	13 0b       	sbc	r17, r19
 6b6:	61 2c       	mov	r6, r1
 6b8:	a8 2e       	mov	r10, r24
 6ba:	b1 2c       	mov	r11, r1
 6bc:	c5 01       	movw	r24, r10
 6be:	80 97       	sbiw	r24, 0x20	; 32
 6c0:	5c 01       	movw	r10, r24
 6c2:	aa 0c       	add	r10, r10
 6c4:	bb 1c       	adc	r11, r11
 6c6:	aa 0c       	add	r10, r10
 6c8:	bb 1c       	adc	r11, r11
 6ca:	a8 0e       	add	r10, r24
 6cc:	b9 1e       	adc	r11, r25
 6ce:	0f 2e       	mov	r0, r31
 6d0:	fb e2       	ldi	r31, 0x2B	; 43
 6d2:	cf 2e       	mov	r12, r31
 6d4:	f3 e0       	ldi	r31, 0x03	; 3
 6d6:	df 2e       	mov	r13, r31
 6d8:	f0 2d       	mov	r31, r0
 6da:	0f 2e       	mov	r0, r31
 6dc:	fa e2       	ldi	r31, 0x2A	; 42
 6de:	ef 2e       	mov	r14, r31
 6e0:	f3 e0       	ldi	r31, 0x03	; 3
 6e2:	ff 2e       	mov	r15, r31
 6e4:	f0 2d       	mov	r31, r0
 6e6:	2a c0       	rjmp	.+84     	; 0x73c <nokia_lcd_write_char+0xd2>
 6e8:	fe 01       	movw	r30, r28
 6ea:	24 91       	lpm	r18, Z
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	87 2d       	mov	r24, r7
 6f0:	65 2d       	mov	r22, r5
 6f2:	ae d2       	rcall	.+1372   	; 0xc50 <__udivmodqi4>
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <nokia_lcd_write_char+0x90>
 6f6:	35 95       	asr	r19
 6f8:	27 95       	ror	r18
 6fa:	8a 95       	dec	r24
 6fc:	e2 f7       	brpl	.-8      	; 0x6f6 <nokia_lcd_write_char+0x8c>
 6fe:	20 ff       	sbrs	r18, 0
 700:	09 c0       	rjmp	.+18     	; 0x714 <nokia_lcd_write_char+0xaa>
 702:	f6 01       	movw	r30, r12
 704:	60 81       	ld	r22, Z
 706:	67 0d       	add	r22, r7
 708:	f7 01       	movw	r30, r14
 70a:	80 81       	ld	r24, Z
 70c:	41 e0       	ldi	r20, 0x01	; 1
 70e:	86 0d       	add	r24, r6
 710:	81 df       	rcall	.-254    	; 0x614 <nokia_lcd_set_pixel>
 712:	08 c0       	rjmp	.+16     	; 0x724 <nokia_lcd_write_char+0xba>
 714:	f6 01       	movw	r30, r12
 716:	60 81       	ld	r22, Z
 718:	67 0d       	add	r22, r7
 71a:	f7 01       	movw	r30, r14
 71c:	80 81       	ld	r24, Z
 71e:	40 e0       	ldi	r20, 0x00	; 0
 720:	86 0d       	add	r24, r6
 722:	78 df       	rcall	.-272    	; 0x614 <nokia_lcd_set_pixel>
 724:	73 94       	inc	r7
 726:	87 2d       	mov	r24, r7
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	80 17       	cp	r24, r16
 72c:	91 07       	cpc	r25, r17
 72e:	e4 f2       	brlt	.-72     	; 0x6e8 <nokia_lcd_write_char+0x7e>
 730:	63 94       	inc	r6
 732:	86 2d       	mov	r24, r6
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	88 15       	cp	r24, r8
 738:	99 05       	cpc	r25, r9
 73a:	6c f4       	brge	.+26     	; 0x756 <nokia_lcd_write_char+0xec>
 73c:	10 16       	cp	r1, r16
 73e:	11 06       	cpc	r1, r17
 740:	bc f7       	brge	.-18     	; 0x730 <nokia_lcd_write_char+0xc6>
 742:	86 2d       	mov	r24, r6
 744:	65 2d       	mov	r22, r5
 746:	84 d2       	rcall	.+1288   	; 0xc50 <__udivmodqi4>
 748:	e5 01       	movw	r28, r10
 74a:	c8 0f       	add	r28, r24
 74c:	d1 1d       	adc	r29, r1
 74e:	c4 57       	subi	r28, 0x74	; 116
 750:	df 4f       	sbci	r29, 0xFF	; 255
 752:	71 2c       	mov	r7, r1
 754:	c9 cf       	rjmp	.-110    	; 0x6e8 <nokia_lcd_write_char+0x7e>
 756:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <nokia_lcd+0x1f8>
 75a:	91 e0       	ldi	r25, 0x01	; 1
 75c:	98 0f       	add	r25, r24
 75e:	85 2d       	mov	r24, r5
 760:	88 0f       	add	r24, r24
 762:	88 0f       	add	r24, r24
 764:	85 0d       	add	r24, r5
 766:	89 0f       	add	r24, r25
 768:	84 35       	cpi	r24, 0x54	; 84
 76a:	18 f4       	brcc	.+6      	; 0x772 <nokia_lcd_write_char+0x108>
 76c:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <nokia_lcd+0x1f8>
 770:	0e c0       	rjmp	.+28     	; 0x78e <nokia_lcd_write_char+0x124>
 772:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <nokia_lcd+0x1f8>
 776:	eb e2       	ldi	r30, 0x2B	; 43
 778:	f3 e0       	ldi	r31, 0x03	; 3
 77a:	80 81       	ld	r24, Z
 77c:	91 e0       	ldi	r25, 0x01	; 1
 77e:	98 0f       	add	r25, r24
 780:	85 2d       	mov	r24, r5
 782:	88 0f       	add	r24, r24
 784:	88 0f       	add	r24, r24
 786:	88 0f       	add	r24, r24
 788:	85 19       	sub	r24, r5
 78a:	89 0f       	add	r24, r25
 78c:	80 83       	st	Z, r24
 78e:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <nokia_lcd+0x1f9>
 792:	80 33       	cpi	r24, 0x30	; 48
 794:	20 f0       	brcs	.+8      	; 0x79e <nokia_lcd_write_char+0x134>
 796:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <nokia_lcd+0x1f8>
 79a:	10 92 2b 03 	sts	0x032B, r1	; 0x80032b <nokia_lcd+0x1f9>
 79e:	df 91       	pop	r29
 7a0:	cf 91       	pop	r28
 7a2:	1f 91       	pop	r17
 7a4:	0f 91       	pop	r16
 7a6:	ff 90       	pop	r15
 7a8:	ef 90       	pop	r14
 7aa:	df 90       	pop	r13
 7ac:	cf 90       	pop	r12
 7ae:	bf 90       	pop	r11
 7b0:	af 90       	pop	r10
 7b2:	9f 90       	pop	r9
 7b4:	8f 90       	pop	r8
 7b6:	7f 90       	pop	r7
 7b8:	6f 90       	pop	r6
 7ba:	5f 90       	pop	r5
 7bc:	08 95       	ret

000007be <nokia_lcd_write_string>:
 7be:	1f 93       	push	r17
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	ec 01       	movw	r28, r24
 7c6:	88 81       	ld	r24, Y
 7c8:	88 23       	and	r24, r24
 7ca:	39 f0       	breq	.+14     	; 0x7da <nokia_lcd_write_string+0x1c>
 7cc:	16 2f       	mov	r17, r22
 7ce:	21 96       	adiw	r28, 0x01	; 1
 7d0:	61 2f       	mov	r22, r17
 7d2:	4b df       	rcall	.-362    	; 0x66a <nokia_lcd_write_char>
 7d4:	89 91       	ld	r24, Y+
 7d6:	81 11       	cpse	r24, r1
 7d8:	fb cf       	rjmp	.-10     	; 0x7d0 <nokia_lcd_write_string+0x12>
 7da:	df 91       	pop	r29
 7dc:	cf 91       	pop	r28
 7de:	1f 91       	pop	r17
 7e0:	08 95       	ret

000007e2 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
 7e2:	0f 93       	push	r16
 7e4:	1f 93       	push	r17
 7e6:	cf 93       	push	r28
 7e8:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 7ea:	80 e8       	ldi	r24, 0x80	; 128
 7ec:	7b dd       	rcall	.-1290   	; 0x2e4 <write_cmd>
	write_cmd(0x40);
 7ee:	80 e4       	ldi	r24, 0x40	; 64
 7f0:	79 dd       	rcall	.-1294   	; 0x2e4 <write_cmd>
 7f2:	c2 e3       	ldi	r28, 0x32	; 50
 7f4:	d1 e0       	ldi	r29, 0x01	; 1
 7f6:	0a e2       	ldi	r16, 0x2A	; 42
 7f8:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 7fa:	61 e0       	ldi	r22, 0x01	; 1
 7fc:	89 91       	ld	r24, Y+
 7fe:	54 dd       	rcall	.-1368   	; 0x2a8 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 800:	c0 17       	cp	r28, r16
 802:	d1 07       	cpc	r29, r17
 804:	d1 f7       	brne	.-12     	; 0x7fa <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
 806:	df 91       	pop	r29
 808:	cf 91       	pop	r28
 80a:	1f 91       	pop	r17
 80c:	0f 91       	pop	r16
 80e:	08 95       	ret

00000810 <nokia_lcd_write_lock>:

void nokia_lcd_write_lock(unsigned char lock)
{
 810:	0f 93       	push	r16
 812:	1f 93       	push	r17
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
	if(!lock)
 818:	88 23       	and	r24, r24
 81a:	69 f0       	breq	.+26     	; 0x836 <nokia_lcd_write_lock+0x26>
 81c:	d9 e1       	ldi	r29, 0x19	; 25
 81e:	79 c0       	rjmp	.+242    	; 0x912 <nokia_lcd_write_lock+0x102>
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
		{
			for(unsigned char j = 0; j < 20; ++j) // vertical pixels
			{
				nokia_lcd_set_pixel(20+i,15+j,1);
 820:	41 e0       	ldi	r20, 0x01	; 1
 822:	6c 2f       	mov	r22, r28
 824:	8d 2f       	mov	r24, r29
 826:	f6 de       	rcall	.-532    	; 0x614 <nokia_lcd_set_pixel>
 828:	cf 5f       	subi	r28, 0xFF	; 255
	{
		// create unlocked symbol
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
		{
			for(unsigned char j = 0; j < 20; ++j) // vertical pixels
 82a:	c3 32       	cpi	r28, 0x23	; 35
 82c:	c9 f7       	brne	.-14     	; 0x820 <nokia_lcd_write_lock+0x10>
 82e:	df 5f       	subi	r29, 0xFF	; 255
{
	if(!lock)
	{
		// create unlocked symbol
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
 830:	d2 33       	cpi	r29, 0x32	; 50
 832:	11 f4       	brne	.+4      	; 0x838 <nokia_lcd_write_lock+0x28>
 834:	0e c0       	rjmp	.+28     	; 0x852 <nokia_lcd_write_lock+0x42>
 836:	d9 e1       	ldi	r29, 0x19	; 25
	for (i = 0; i < 504; i++)
		write_data(nokia_lcd.screen[i]);
}

void nokia_lcd_write_lock(unsigned char lock)
{
 838:	cf e0       	ldi	r28, 0x0F	; 15
 83a:	f2 cf       	rjmp	.-28     	; 0x820 <nokia_lcd_write_lock+0x10>
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
		{
			for(unsigned char i = 0; i < 3; ++i)
			{
				nokia_lcd_set_pixel(36 + i, 22 + j, 0);
 83c:	40 e0       	ldi	r20, 0x00	; 0
 83e:	6d 2f       	mov	r22, r29
 840:	8c 2f       	mov	r24, r28
 842:	e8 de       	rcall	.-560    	; 0x614 <nokia_lcd_set_pixel>
 844:	cf 5f       	subi	r28, 0xFF	; 255
		}
		
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
		{
			for(unsigned char i = 0; i < 3; ++i)
 846:	c7 32       	cpi	r28, 0x27	; 39
 848:	c9 f7       	brne	.-14     	; 0x83c <nokia_lcd_write_lock+0x2c>
 84a:	df 5f       	subi	r29, 0xFF	; 255
				nokia_lcd_set_pixel(20+i,15+j,1);
			}
		}
		
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
 84c:	dc 31       	cpi	r29, 0x1C	; 28
 84e:	11 f4       	brne	.+4      	; 0x854 <nokia_lcd_write_lock+0x44>
 850:	0e c0       	rjmp	.+28     	; 0x86e <nokia_lcd_write_lock+0x5e>
 852:	d6 e1       	ldi	r29, 0x16	; 22
 854:	c4 e2       	ldi	r28, 0x24	; 36
 856:	f2 cf       	rjmp	.-28     	; 0x83c <nokia_lcd_write_lock+0x2c>
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(25+j, 10+i, 1);
 858:	41 e0       	ldi	r20, 0x01	; 1
 85a:	6d 2f       	mov	r22, r29
 85c:	8c 2f       	mov	r24, r28
 85e:	da de       	rcall	.-588    	; 0x614 <nokia_lcd_set_pixel>
 860:	cf 5f       	subi	r28, 0xFF	; 255
		}
		
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 862:	cd 31       	cpi	r28, 0x1D	; 29
 864:	c9 f7       	brne	.-14     	; 0x858 <nokia_lcd_write_lock+0x48>
 866:	df 5f       	subi	r29, 0xFF	; 255
				nokia_lcd_set_pixel(36 + i, 22 + j, 0);
			}
		}
		
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
 868:	d0 31       	cpi	r29, 0x10	; 16
 86a:	11 f4       	brne	.+4      	; 0x870 <nokia_lcd_write_lock+0x60>
 86c:	0e c0       	rjmp	.+28     	; 0x88a <nokia_lcd_write_lock+0x7a>
 86e:	da e0       	ldi	r29, 0x0A	; 10
 870:	c9 e1       	ldi	r28, 0x19	; 25
 872:	f2 cf       	rjmp	.-28     	; 0x858 <nokia_lcd_write_lock+0x48>
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(27+j, 5+i, 1);
 874:	41 e0       	ldi	r20, 0x01	; 1
 876:	6d 2f       	mov	r22, r29
 878:	8c 2f       	mov	r24, r28
 87a:	cc de       	rcall	.-616    	; 0x614 <nokia_lcd_set_pixel>
 87c:	cf 5f       	subi	r28, 0xFF	; 255
				nokia_lcd_set_pixel(25+j, 10+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 87e:	cf 31       	cpi	r28, 0x1F	; 31
 880:	c9 f7       	brne	.-14     	; 0x874 <nokia_lcd_write_lock+0x64>
 882:	df 5f       	subi	r29, 0xFF	; 255
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(25+j, 10+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
 884:	db 30       	cpi	r29, 0x0B	; 11
 886:	11 f4       	brne	.+4      	; 0x88c <nokia_lcd_write_lock+0x7c>
 888:	0e c0       	rjmp	.+28     	; 0x8a6 <nokia_lcd_write_lock+0x96>
 88a:	d5 e0       	ldi	r29, 0x05	; 5
 88c:	cb e1       	ldi	r28, 0x1B	; 27
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(30+j, 2+i, 1);
 88e:	f2 cf       	rjmp	.-28     	; 0x874 <nokia_lcd_write_lock+0x64>
 890:	41 e0       	ldi	r20, 0x01	; 1
 892:	6d 2f       	mov	r22, r29
 894:	8c 2f       	mov	r24, r28
 896:	be de       	rcall	.-644    	; 0x614 <nokia_lcd_set_pixel>
 898:	cf 5f       	subi	r28, 0xFF	; 255
			}
		}
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
 89a:	c1 32       	cpi	r28, 0x21	; 33
 89c:	c9 f7       	brne	.-14     	; 0x890 <nokia_lcd_write_lock+0x80>
 89e:	df 5f       	subi	r29, 0xFF	; 255
			{
				nokia_lcd_set_pixel(27+j, 5+i, 1);
			}
		}
		
		for(unsigned char i = 0; i < 5; ++i)
 8a0:	d7 30       	cpi	r29, 0x07	; 7
 8a2:	11 f4       	brne	.+4      	; 0x8a8 <nokia_lcd_write_lock+0x98>
 8a4:	0e c0       	rjmp	.+28     	; 0x8c2 <nokia_lcd_write_lock+0xb2>
 8a6:	d2 e0       	ldi	r29, 0x02	; 2
 8a8:	ce e1       	ldi	r28, 0x1E	; 30
		}
		for(unsigned char i = 0; i < 3; ++i)
		{
			for(unsigned char j = 0; j < 9; ++j)
			{
				nokia_lcd_set_pixel(32+j, 1+i, 1);
 8aa:	f2 cf       	rjmp	.-28     	; 0x890 <nokia_lcd_write_lock+0x80>
 8ac:	41 e0       	ldi	r20, 0x01	; 1
 8ae:	61 2f       	mov	r22, r17
 8b0:	8c 2f       	mov	r24, r28
 8b2:	b0 de       	rcall	.-672    	; 0x614 <nokia_lcd_set_pixel>
 8b4:	cf 5f       	subi	r28, 0xFF	; 255
				nokia_lcd_set_pixel(30+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 3; ++i)
		{
			for(unsigned char j = 0; j < 9; ++j)
 8b6:	c9 32       	cpi	r28, 0x29	; 41
 8b8:	c9 f7       	brne	.-14     	; 0x8ac <nokia_lcd_write_lock+0x9c>
 8ba:	1f 5f       	subi	r17, 0xFF	; 255
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(30+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 3; ++i)
 8bc:	14 30       	cpi	r17, 0x04	; 4
 8be:	11 f4       	brne	.+4      	; 0x8c4 <nokia_lcd_write_lock+0xb4>
 8c0:	0e c0       	rjmp	.+28     	; 0x8de <nokia_lcd_write_lock+0xce>
 8c2:	11 e0       	ldi	r17, 0x01	; 1
 8c4:	c0 e2       	ldi	r28, 0x20	; 32
		
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(41+j, 2+i, 1);
 8c6:	f2 cf       	rjmp	.-28     	; 0x8ac <nokia_lcd_write_lock+0x9c>
 8c8:	41 e0       	ldi	r20, 0x01	; 1
 8ca:	60 2f       	mov	r22, r16
 8cc:	8d 2f       	mov	r24, r29
 8ce:	a2 de       	rcall	.-700    	; 0x614 <nokia_lcd_set_pixel>
 8d0:	df 5f       	subi	r29, 0xFF	; 255
		}
		
		
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 8d2:	dd 32       	cpi	r29, 0x2D	; 45
 8d4:	c9 f7       	brne	.-14     	; 0x8c8 <nokia_lcd_write_lock+0xb8>
 8d6:	0f 5f       	subi	r16, 0xFF	; 255
				nokia_lcd_set_pixel(32+j, 1+i, 1);
			}
		}
		
		
		for(unsigned char i = 0; i < 6; ++i)
 8d8:	08 30       	cpi	r16, 0x08	; 8
 8da:	11 f4       	brne	.+4      	; 0x8e0 <nokia_lcd_write_lock+0xd0>
 8dc:	0e c0       	rjmp	.+28     	; 0x8fa <nokia_lcd_write_lock+0xea>
 8de:	02 e0       	ldi	r16, 0x02	; 2
 8e0:	dc 2f       	mov	r29, r28
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(42+j, 4+i, 1);
 8e2:	f2 cf       	rjmp	.-28     	; 0x8c8 <nokia_lcd_write_lock+0xb8>
 8e4:	41 e0       	ldi	r20, 0x01	; 1
 8e6:	61 2f       	mov	r22, r17
 8e8:	8c 2f       	mov	r24, r28
 8ea:	94 de       	rcall	.-728    	; 0x614 <nokia_lcd_set_pixel>
 8ec:	cf 5f       	subi	r28, 0xFF	; 255
				nokia_lcd_set_pixel(41+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 8ee:	ce 32       	cpi	r28, 0x2E	; 46
 8f0:	c9 f7       	brne	.-14     	; 0x8e4 <nokia_lcd_write_lock+0xd4>
 8f2:	1f 5f       	subi	r17, 0xFF	; 255
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(41+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
 8f4:	1a 30       	cpi	r17, 0x0A	; 10
 8f6:	09 f4       	brne	.+2      	; 0x8fa <nokia_lcd_write_lock+0xea>
 8f8:	7a c0       	rjmp	.+244    	; 0x9ee <nokia_lcd_write_lock+0x1de>
 8fa:	ca e2       	ldi	r28, 0x2A	; 42
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
		{
			for(unsigned char j = 0; j < 20; ++j) // vertical pixels
			{
				nokia_lcd_set_pixel(20+i,15+j,1);
 8fc:	f3 cf       	rjmp	.-26     	; 0x8e4 <nokia_lcd_write_lock+0xd4>
 8fe:	41 e0       	ldi	r20, 0x01	; 1
 900:	6c 2f       	mov	r22, r28
 902:	8d 2f       	mov	r24, r29
 904:	87 de       	rcall	.-754    	; 0x614 <nokia_lcd_set_pixel>
 906:	cf 5f       	subi	r28, 0xFF	; 255
	{
		// create locked symbol
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
		{
			for(unsigned char j = 0; j < 20; ++j) // vertical pixels
 908:	c3 32       	cpi	r28, 0x23	; 35
 90a:	c9 f7       	brne	.-14     	; 0x8fe <nokia_lcd_write_lock+0xee>
	}
	else
	{
		// create locked symbol
		// create box
		for(unsigned char i = 5; i < 30; ++i) // horizontal pixels
 90c:	df 5f       	subi	r29, 0xFF	; 255
 90e:	d2 33       	cpi	r29, 0x32	; 50
 910:	69 f0       	breq	.+26     	; 0x92c <nokia_lcd_write_lock+0x11c>
 912:	cf e0       	ldi	r28, 0x0F	; 15
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
		{
			for(unsigned char i = 0; i < 3; ++i)
			{
				nokia_lcd_set_pixel(36 + i, 22 + j, 0);
 914:	f4 cf       	rjmp	.-24     	; 0x8fe <nokia_lcd_write_lock+0xee>
 916:	40 e0       	ldi	r20, 0x00	; 0
 918:	6d 2f       	mov	r22, r29
 91a:	8c 2f       	mov	r24, r28
 91c:	7b de       	rcall	.-778    	; 0x614 <nokia_lcd_set_pixel>
 91e:	cf 5f       	subi	r28, 0xFF	; 255
		}
		
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
		{
			for(unsigned char i = 0; i < 3; ++i)
 920:	c7 32       	cpi	r28, 0x27	; 39
 922:	c9 f7       	brne	.-14     	; 0x916 <nokia_lcd_write_lock+0x106>
				nokia_lcd_set_pixel(20+i,15+j,1);
			}
		}
		
		//create keyhole
		for(unsigned char j = 0; j < 6; ++j)
 924:	df 5f       	subi	r29, 0xFF	; 255
 926:	dc 31       	cpi	r29, 0x1C	; 28
 928:	11 f4       	brne	.+4      	; 0x92e <nokia_lcd_write_lock+0x11e>
 92a:	0e c0       	rjmp	.+28     	; 0x948 <nokia_lcd_write_lock+0x138>
 92c:	d6 e1       	ldi	r29, 0x16	; 22
 92e:	c4 e2       	ldi	r28, 0x24	; 36
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(25+j, 10+i, 1);
 930:	f2 cf       	rjmp	.-28     	; 0x916 <nokia_lcd_write_lock+0x106>
 932:	41 e0       	ldi	r20, 0x01	; 1
 934:	6d 2f       	mov	r22, r29
 936:	8c 2f       	mov	r24, r28
 938:	6d de       	rcall	.-806    	; 0x614 <nokia_lcd_set_pixel>
 93a:	cf 5f       	subi	r28, 0xFF	; 255
		}
		
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 93c:	cd 31       	cpi	r28, 0x1D	; 29
 93e:	c9 f7       	brne	.-14     	; 0x932 <nokia_lcd_write_lock+0x122>
				nokia_lcd_set_pixel(36 + i, 22 + j, 0);
			}
		}
		
		// create 'C'
		for(unsigned char i = 0; i < 6; ++i)
 940:	df 5f       	subi	r29, 0xFF	; 255
 942:	d0 31       	cpi	r29, 0x10	; 16
 944:	11 f4       	brne	.+4      	; 0x94a <nokia_lcd_write_lock+0x13a>
 946:	0e c0       	rjmp	.+28     	; 0x964 <nokia_lcd_write_lock+0x154>
 948:	da e0       	ldi	r29, 0x0A	; 10
 94a:	c9 e1       	ldi	r28, 0x19	; 25
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(27+j, 5+i, 1);
 94c:	f2 cf       	rjmp	.-28     	; 0x932 <nokia_lcd_write_lock+0x122>
 94e:	41 e0       	ldi	r20, 0x01	; 1
 950:	6d 2f       	mov	r22, r29
 952:	8c 2f       	mov	r24, r28
 954:	5f de       	rcall	.-834    	; 0x614 <nokia_lcd_set_pixel>
 956:	cf 5f       	subi	r28, 0xFF	; 255
				nokia_lcd_set_pixel(25+j, 10+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 958:	cf 31       	cpi	r28, 0x1F	; 31
 95a:	c9 f7       	brne	.-14     	; 0x94e <nokia_lcd_write_lock+0x13e>
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(25+j, 10+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
 95c:	df 5f       	subi	r29, 0xFF	; 255
 95e:	db 30       	cpi	r29, 0x0B	; 11
 960:	11 f4       	brne	.+4      	; 0x966 <nokia_lcd_write_lock+0x156>
 962:	0e c0       	rjmp	.+28     	; 0x980 <nokia_lcd_write_lock+0x170>
 964:	d5 e0       	ldi	r29, 0x05	; 5
 966:	cb e1       	ldi	r28, 0x1B	; 27
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(30+j, 2+i, 1);
 968:	f2 cf       	rjmp	.-28     	; 0x94e <nokia_lcd_write_lock+0x13e>
 96a:	41 e0       	ldi	r20, 0x01	; 1
 96c:	6d 2f       	mov	r22, r29
 96e:	8c 2f       	mov	r24, r28
 970:	51 de       	rcall	.-862    	; 0x614 <nokia_lcd_set_pixel>
			}
		}
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
 972:	cf 5f       	subi	r28, 0xFF	; 255
 974:	c1 32       	cpi	r28, 0x21	; 33
 976:	c9 f7       	brne	.-14     	; 0x96a <nokia_lcd_write_lock+0x15a>
			{
				nokia_lcd_set_pixel(27+j, 5+i, 1);
			}
		}
		
		for(unsigned char i = 0; i < 5; ++i)
 978:	df 5f       	subi	r29, 0xFF	; 255
 97a:	d7 30       	cpi	r29, 0x07	; 7
 97c:	11 f4       	brne	.+4      	; 0x982 <nokia_lcd_write_lock+0x172>
 97e:	0e c0       	rjmp	.+28     	; 0x99c <nokia_lcd_write_lock+0x18c>
 980:	d2 e0       	ldi	r29, 0x02	; 2
 982:	ce e1       	ldi	r28, 0x1E	; 30
		}
		for(unsigned char i = 0; i < 3; ++i)
		{
			for(unsigned char j = 0; j < 10; ++j)
			{
				nokia_lcd_set_pixel(32+j, 1+i, 1);
 984:	f2 cf       	rjmp	.-28     	; 0x96a <nokia_lcd_write_lock+0x15a>
 986:	41 e0       	ldi	r20, 0x01	; 1
 988:	6d 2f       	mov	r22, r29
 98a:	8c 2f       	mov	r24, r28
 98c:	43 de       	rcall	.-890    	; 0x614 <nokia_lcd_set_pixel>
				nokia_lcd_set_pixel(30+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 3; ++i)
		{
			for(unsigned char j = 0; j < 10; ++j)
 98e:	cf 5f       	subi	r28, 0xFF	; 255
 990:	ca 32       	cpi	r28, 0x2A	; 42
 992:	c9 f7       	brne	.-14     	; 0x986 <nokia_lcd_write_lock+0x176>
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(30+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 3; ++i)
 994:	df 5f       	subi	r29, 0xFF	; 255
 996:	d4 30       	cpi	r29, 0x04	; 4
 998:	11 f4       	brne	.+4      	; 0x99e <nokia_lcd_write_lock+0x18e>
 99a:	0e c0       	rjmp	.+28     	; 0x9b8 <nokia_lcd_write_lock+0x1a8>
 99c:	d1 e0       	ldi	r29, 0x01	; 1
 99e:	c0 e2       	ldi	r28, 0x20	; 32
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(42+j, 2+i, 1);
 9a0:	f2 cf       	rjmp	.-28     	; 0x986 <nokia_lcd_write_lock+0x176>
 9a2:	41 e0       	ldi	r20, 0x01	; 1
 9a4:	60 2f       	mov	r22, r16
 9a6:	81 2f       	mov	r24, r17
 9a8:	35 de       	rcall	.-918    	; 0x614 <nokia_lcd_set_pixel>
		}
		
		
		for(unsigned char i = 0; i < 5; ++i)
		{
			for(unsigned char j = 0; j < 3; ++j)
 9aa:	1f 5f       	subi	r17, 0xFF	; 255
 9ac:	1d 32       	cpi	r17, 0x2D	; 45
 9ae:	c9 f7       	brne	.-14     	; 0x9a2 <nokia_lcd_write_lock+0x192>
				nokia_lcd_set_pixel(32+j, 1+i, 1);
			}
		}
		
		
		for(unsigned char i = 0; i < 5; ++i)
 9b0:	0f 5f       	subi	r16, 0xFF	; 255
 9b2:	07 30       	cpi	r16, 0x07	; 7
 9b4:	11 f4       	brne	.+4      	; 0x9ba <nokia_lcd_write_lock+0x1aa>
 9b6:	0d c0       	rjmp	.+26     	; 0x9d2 <nokia_lcd_write_lock+0x1c2>
 9b8:	02 e0       	ldi	r16, 0x02	; 2
 9ba:	1c 2f       	mov	r17, r28
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(44+j, 4+i, 1);
 9bc:	f2 cf       	rjmp	.-28     	; 0x9a2 <nokia_lcd_write_lock+0x192>
 9be:	41 e0       	ldi	r20, 0x01	; 1
 9c0:	6d 2f       	mov	r22, r29
 9c2:	8c 2f       	mov	r24, r28
 9c4:	27 de       	rcall	.-946    	; 0x614 <nokia_lcd_set_pixel>
				nokia_lcd_set_pixel(42+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 9c6:	cf 5f       	subi	r28, 0xFF	; 255
 9c8:	c0 33       	cpi	r28, 0x30	; 48
 9ca:	c9 f7       	brne	.-14     	; 0x9be <nokia_lcd_write_lock+0x1ae>
			for(unsigned char j = 0; j < 3; ++j)
			{
				nokia_lcd_set_pixel(42+j, 2+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
 9cc:	df 5f       	subi	r29, 0xFF	; 255
 9ce:	da 30       	cpi	r29, 0x0A	; 10
 9d0:	61 f0       	breq	.+24     	; 0x9ea <nokia_lcd_write_lock+0x1da>
 9d2:	cc e2       	ldi	r28, 0x2C	; 44
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(46+j, 10+i, 1);
 9d4:	f4 cf       	rjmp	.-24     	; 0x9be <nokia_lcd_write_lock+0x1ae>
 9d6:	41 e0       	ldi	r20, 0x01	; 1
 9d8:	6d 2f       	mov	r22, r29
 9da:	8c 2f       	mov	r24, r28
 9dc:	1b de       	rcall	.-970    	; 0x614 <nokia_lcd_set_pixel>
 9de:	cf 5f       	subi	r28, 0xFF	; 255
				nokia_lcd_set_pixel(44+j, 4+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
		{
			for(unsigned char j = 0; j < 4; ++j)
 9e0:	c2 33       	cpi	r28, 0x32	; 50
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <nokia_lcd_write_lock+0x1c6>
 9e4:	df 5f       	subi	r29, 0xFF	; 255
			for(unsigned char j = 0; j < 4; ++j)
			{
				nokia_lcd_set_pixel(44+j, 4+i, 1);
			}
		}
		for(unsigned char i = 0; i < 6; ++i)
 9e6:	d0 31       	cpi	r29, 0x10	; 16
 9e8:	11 f0       	breq	.+4      	; 0x9ee <nokia_lcd_write_lock+0x1de>
 9ea:	ce e2       	ldi	r28, 0x2E	; 46
 9ec:	f4 cf       	rjmp	.-24     	; 0x9d6 <nokia_lcd_write_lock+0x1c6>
			{
				nokia_lcd_set_pixel(46+j, 10+i, 1);
			}
		}
	}
}
 9ee:	df 91       	pop	r29
 9f0:	cf 91       	pop	r28
 9f2:	1f 91       	pop	r17
 9f4:	0f 91       	pop	r16
 9f6:	08 95       	ret

000009f8 <Combine_tick>:
}

enum Combine_States{Combine_Init, Combine_Execute};
int Combine_tick(int Combine_State)
{
	switch (Combine_State)
 9f8:	02 97       	sbiw	r24, 0x02	; 2
 9fa:	08 f0       	brcs	.+2      	; 0x9fe <Combine_tick+0x6>
 9fc:	5f c0       	rjmp	.+190    	; 0xabc <Combine_tick+0xc4>
		case Combine_Init:	
			break;
			
		case Combine_Execute:
			// display string
			nokia_lcd_init();
 9fe:	c3 dd       	rcall	.-1146   	; 0x586 <nokia_lcd_init>
			nokia_lcd_clear();
 a00:	f8 dd       	rcall	.-1040   	; 0x5f2 <nokia_lcd_clear>
 a02:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <lock_str>
			
			nokia_lcd_write_lock(lock_str);
 a06:	04 df       	rcall	.-504    	; 0x810 <nokia_lcd_write_lock>
 a08:	81 e1       	ldi	r24, 0x11	; 17
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 a0a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <nokia_lcd+0x1f8>
 a0e:	88 e2       	ldi	r24, 0x28	; 40
	nokia_lcd.cursor_y = y;
 a10:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <nokia_lcd+0x1f9>
 a14:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_set_cursor(17,40);
			nokia_lcd_write_string(status_str, 1);
 a16:	84 e1       	ldi	r24, 0x14	; 20
 a18:	91 e0       	ldi	r25, 0x01	; 1
 a1a:	d1 de       	rcall	.-606    	; 0x7be <nokia_lcd_write_string>
			nokia_lcd_render();
 a1c:	e2 de       	rcall	.-572    	; 0x7e2 <nokia_lcd_render>
 a1e:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <servo>
			
			// do servo stuff
			switch (servo)
 a22:	81 30       	cpi	r24, 0x01	; 1
 a24:	19 f0       	breq	.+6      	; 0xa2c <Combine_tick+0x34>
 a26:	82 30       	cpi	r24, 0x02	; 2
 a28:	29 f1       	breq	.+74     	; 0xa74 <Combine_tick+0x7c>
 a2a:	4b c0       	rjmp	.+150    	; 0xac2 <Combine_tick+0xca>
 a2c:	e1 e8       	ldi	r30, 0x81	; 129
	//Enable global interrupts
	SREG |= 0x80;	// 0x80: 1000000
}

void TimerOff() {
	TCCR1B 	= 0x00; // bit3bit2bit1bit0=0000: timer off
 a2e:	f0 e0       	ldi	r31, 0x00	; 0
 a30:	10 82       	st	Z, r1
 a32:	a0 e8       	ldi	r26, 0x80	; 128
				* servo is connected to OC1A => pin 19 on Atmega1284
				*/	
				case servo_lock:
					//rotate counter clockwise to lock position
					TimerOff();
					TCCR1A |= 1<<WGM11 | 1<<COM1A1 | 1<<COM1A0;
 a34:	b0 e0       	ldi	r27, 0x00	; 0
 a36:	8c 91       	ld	r24, X
 a38:	82 6c       	ori	r24, 0xC2	; 194
 a3a:	8c 93       	st	X, r24
 a3c:	80 81       	ld	r24, Z
					TCCR1B |= 1<<WGM13 | 1<<WGM12 | 1<<CS10;
 a3e:	89 61       	ori	r24, 0x19	; 25
 a40:	80 83       	st	Z, r24
 a42:	8f e1       	ldi	r24, 0x1F	; 31
					ICR1 = 19999;
 a44:	9e e4       	ldi	r25, 0x4E	; 78
 a46:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 a4a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 a4e:	84 e7       	ldi	r24, 0x74	; 116
					OCR1A = 16500;
 a50:	90 e4       	ldi	r25, 0x40	; 64
 a52:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 a56:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 a5a:	2f eb       	ldi	r18, 0xBF	; 191
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a5c:	87 e2       	ldi	r24, 0x27	; 39
 a5e:	99 e0       	ldi	r25, 0x09	; 9
 a60:	21 50       	subi	r18, 0x01	; 1
 a62:	80 40       	sbci	r24, 0x00	; 0
 a64:	90 40       	sbci	r25, 0x00	; 0
 a66:	e1 f7       	brne	.-8      	; 0xa60 <Combine_tick+0x68>
 a68:	00 c0       	rjmp	.+0      	; 0xa6a <Combine_tick+0x72>
 a6a:	00 00       	nop
					_delay_ms(3000);
					TimerOn();
 a6c:	9c dc       	rcall	.-1736   	; 0x3a6 <TimerOn>
 a6e:	81 e0       	ldi	r24, 0x01	; 1
int Combine_tick(int Combine_State)
{
	switch (Combine_State)
	{
		case Combine_Init:
			Combine_State = Combine_Execute;
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	08 95       	ret
					TCCR1B |= 1<<WGM13 | 1<<WGM12 | 1<<CS10;
					ICR1 = 19999;
					OCR1A = 16500;
					_delay_ms(3000);
					TimerOn();
					break;
 a74:	e1 e8       	ldi	r30, 0x81	; 129
 a76:	f0 e0       	ldi	r31, 0x00	; 0
 a78:	10 82       	st	Z, r1
 a7a:	a0 e8       	ldi	r26, 0x80	; 128
					
				case servo_unlock:
					//rotate clockwise to unlocked position
					TimerOff();
					TCCR1A |= 1<<WGM11 | 1<<COM1A1 | 1<<COM1A0;
 a7c:	b0 e0       	ldi	r27, 0x00	; 0
 a7e:	8c 91       	ld	r24, X
 a80:	82 6c       	ori	r24, 0xC2	; 194
 a82:	8c 93       	st	X, r24
 a84:	80 81       	ld	r24, Z
					TCCR1B |= 1<<WGM13 | 1<<WGM12 | 1<<CS10;
 a86:	89 61       	ori	r24, 0x19	; 25
 a88:	80 83       	st	Z, r24
 a8a:	8f e1       	ldi	r24, 0x1F	; 31
					ICR1 = 19999;
 a8c:	9e e4       	ldi	r25, 0x4E	; 78
 a8e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 a92:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 a96:	80 e7       	ldi	r24, 0x70	; 112
					OCR1A = 6000;
 a98:	97 e1       	ldi	r25, 0x17	; 23
 a9a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 a9e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 aa2:	2f eb       	ldi	r18, 0xBF	; 191
 aa4:	87 e2       	ldi	r24, 0x27	; 39
 aa6:	99 e0       	ldi	r25, 0x09	; 9
 aa8:	21 50       	subi	r18, 0x01	; 1
 aaa:	80 40       	sbci	r24, 0x00	; 0
 aac:	90 40       	sbci	r25, 0x00	; 0
 aae:	e1 f7       	brne	.-8      	; 0xaa8 <Combine_tick+0xb0>
 ab0:	00 c0       	rjmp	.+0      	; 0xab2 <Combine_tick+0xba>
 ab2:	00 00       	nop
					_delay_ms(3000);
					TimerOn();
 ab4:	78 dc       	rcall	.-1808   	; 0x3a6 <TimerOn>
 ab6:	81 e0       	ldi	r24, 0x01	; 1
int Combine_tick(int Combine_State)
{
	switch (Combine_State)
	{
		case Combine_Init:
			Combine_State = Combine_Execute;
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	08 95       	ret
					TCCR1B |= 1<<WGM13 | 1<<WGM12 | 1<<CS10;
					ICR1 = 19999;
					OCR1A = 6000;
					_delay_ms(3000);
					TimerOn();
					break;
 abc:	80 e0       	ldi	r24, 0x00	; 0
		case Combine_Execute:
			Combine_State = Combine_Execute;
			break;
			
		default:
			Combine_State = Combine_Init;
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	08 95       	ret
 ac2:	81 e0       	ldi	r24, 0x01	; 1
int Combine_tick(int Combine_State)
{
	switch (Combine_State)
	{
		case Combine_Init:
			Combine_State = Combine_Execute;
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	08 95       	ret

00000ac8 <main>:
		
		default:
			break;
	}
	return Combine_State;
}
 ac8:	cf 93       	push	r28
unsigned long Combine_period  = 100;
unsigned long tasksGCD_period = 100; //findGCD(findGCD(findGCD(Bluetooth_period, Servo_period), LCD_period), Combine_period);
	

int main(void)
{
 aca:	df 93       	push	r29
 acc:	cd b7       	in	r28, 0x3d	; 61
 ace:	de b7       	in	r29, 0x3e	; 62
 ad0:	ac 97       	sbiw	r28, 0x2c	; 44
 ad2:	0f b6       	in	r0, 0x3f	; 63
 ad4:	f8 94       	cli
 ad6:	de bf       	out	0x3e, r29	; 62
 ad8:	0f be       	out	0x3f, r0	; 63
 ada:	cd bf       	out	0x3d, r28	; 61
	// Servo on PD5, bluetooth module on PD0, PD1
	// nokia lcd on PB
	// leds on PA
	DDRD = 0xF0; PORTD = 0x00;
 adc:	80 ef       	ldi	r24, 0xF0	; 240
 ade:	8a b9       	out	0x0a, r24	; 10
 ae0:	1b b8       	out	0x0b, r1	; 11
	DDRB = 0xFF; PORTB = 0x00;
 ae2:	8f ef       	ldi	r24, 0xFF	; 255
 ae4:	84 b9       	out	0x04, r24	; 4
 ae6:	15 b8       	out	0x05, r1	; 5
	nokia_lcd_init();
 ae8:	4e dd       	rcall	.-1380   	; 0x586 <nokia_lcd_init>
	initUSART(0);
 aea:	80 e0       	ldi	r24, 0x00	; 0
 aec:	bc dc       	rcall	.-1672   	; 0x466 <initUSART>
	status = unarmed;
 aee:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <status>
	
	TimerSet(tasksGCD_period);
 af2:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 af6:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 afa:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
 afe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
	TimerOn();
 b02:	40 dc       	rcall	.-1920   	; 0x384 <TimerSet>
 b04:	50 dc       	rcall	.-1888   	; 0x3a6 <TimerOn>
	
    unsigned char tasksNum = 4;
    unsigned char i = 0;
    task tasks[tasksNum];
	// tasks { bluetooth, lcd, servo, combine }
    tasks[i].state = Bluetooth_Init;
 b06:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = Bluetooth_period;
 b08:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <Bluetooth_period>
 b0c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <Bluetooth_period+0x1>
 b10:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <Bluetooth_period+0x2>
 b14:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <Bluetooth_period+0x3>
 b18:	8a 83       	std	Y+2, r24	; 0x02
 b1a:	9b 83       	std	Y+3, r25	; 0x03
 b1c:	ac 83       	std	Y+4, r26	; 0x04
 b1e:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 b20:	8e 83       	std	Y+6, r24	; 0x06
 b22:	9f 83       	std	Y+7, r25	; 0x07
 b24:	a8 87       	std	Y+8, r26	; 0x08
 b26:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &Bluetooth_tick;
 b28:	84 e8       	ldi	r24, 0x84	; 132
 b2a:	92 e0       	ldi	r25, 0x02	; 2
 b2c:	9b 87       	std	Y+11, r25	; 0x0b
 b2e:	8a 87       	std	Y+10, r24	; 0x0a
	++i;
	tasks[i].state = LCD_Init;
 b30:	1c 86       	std	Y+12, r1	; 0x0c
	tasks[i].period = LCD_period;
 b32:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <LCD_period>
 b36:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <LCD_period+0x1>
 b3a:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <LCD_period+0x2>
 b3e:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <LCD_period+0x3>
 b42:	8d 87       	std	Y+13, r24	; 0x0d
 b44:	9e 87       	std	Y+14, r25	; 0x0e
 b46:	af 87       	std	Y+15, r26	; 0x0f
 b48:	b8 8b       	std	Y+16, r27	; 0x10
	tasks[i].elapsedTime = tasks[i].period;
 b4a:	89 8b       	std	Y+17, r24	; 0x11
 b4c:	9a 8b       	std	Y+18, r25	; 0x12
 b4e:	ab 8b       	std	Y+19, r26	; 0x13
 b50:	bc 8b       	std	Y+20, r27	; 0x14
	tasks[i].TickFct = &LCD_tick;
 b52:	8d e9       	ldi	r24, 0x9D	; 157
 b54:	91 e0       	ldi	r25, 0x01	; 1
 b56:	9e 8b       	std	Y+22, r25	; 0x16
 b58:	8d 8b       	std	Y+21, r24	; 0x15
	++i;
	tasks[i].state = Servo_Init;
 b5a:	1f 8a       	std	Y+23, r1	; 0x17
	tasks[i].period = Servo_period;
 b5c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Servo_period>
 b60:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Servo_period+0x1>
 b64:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <Servo_period+0x2>
 b68:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <Servo_period+0x3>
 b6c:	88 8f       	std	Y+24, r24	; 0x18
 b6e:	99 8f       	std	Y+25, r25	; 0x19
 b70:	aa 8f       	std	Y+26, r26	; 0x1a
 b72:	bb 8f       	std	Y+27, r27	; 0x1b
	tasks[i].elapsedTime = tasks[i].period;
 b74:	8c 8f       	std	Y+28, r24	; 0x1c
 b76:	9d 8f       	std	Y+29, r25	; 0x1d
 b78:	ae 8f       	std	Y+30, r26	; 0x1e
 b7a:	bf 8f       	std	Y+31, r27	; 0x1f
	tasks[i].TickFct = &Servo_tick;
 b7c:	85 e7       	ldi	r24, 0x75	; 117
 b7e:	91 e0       	ldi	r25, 0x01	; 1
 b80:	99 a3       	std	Y+33, r25	; 0x21
 b82:	88 a3       	std	Y+32, r24	; 0x20
	++i;
	tasks[i].state = Combine_Init;
 b84:	1a a2       	std	Y+34, r1	; 0x22
	tasks[i].period = Combine_period;
 b86:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Combine_period>
 b8a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Combine_period+0x1>
 b8e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <Combine_period+0x2>
 b92:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <Combine_period+0x3>
 b96:	8b a3       	std	Y+35, r24	; 0x23
 b98:	9c a3       	std	Y+36, r25	; 0x24
 b9a:	ad a3       	std	Y+37, r26	; 0x25
 b9c:	be a3       	std	Y+38, r27	; 0x26
	tasks[i].elapsedTime = tasks[i].period;
 b9e:	8f a3       	std	Y+39, r24	; 0x27
 ba0:	98 a7       	std	Y+40, r25	; 0x28
 ba2:	a9 a7       	std	Y+41, r26	; 0x29
 ba4:	ba a7       	std	Y+42, r27	; 0x2a
	tasks[i].TickFct = &Combine_tick;
 ba6:	8c ef       	ldi	r24, 0xFC	; 252
 ba8:	94 e0       	ldi	r25, 0x04	; 4
 baa:	9c a7       	std	Y+44, r25	; 0x2c
 bac:	8b a7       	std	Y+43, r24	; 0x2b
	
	PORTA = 0x08;
 bae:	88 e0       	ldi	r24, 0x08	; 8
 bb0:	82 b9       	out	0x02, r24	; 2
 bb2:	6e 01       	movw	r12, r28
 bb4:	8d e2       	ldi	r24, 0x2D	; 45
 bb6:	c8 0e       	add	r12, r24
 bb8:	d1 1c       	adc	r13, r1
 bba:	8e 01       	movw	r16, r28
 bbc:	0f 5f       	subi	r16, 0xFF	; 255
 bbe:	1f 4f       	sbci	r17, 0xFF	; 255
 bc0:	78 01       	movw	r14, r16
    while (1) 
    {
		for(i = 0; i < tasksNum; ++i)
		{
			if(tasks[i].elapsedTime >= tasks[i].period) 
 bc2:	d8 01       	movw	r26, r16
 bc4:	15 96       	adiw	r26, 0x05	; 5
 bc6:	4d 91       	ld	r20, X+
 bc8:	5d 91       	ld	r21, X+
 bca:	6d 91       	ld	r22, X+
 bcc:	7c 91       	ld	r23, X
 bce:	18 97       	sbiw	r26, 0x08	; 8
 bd0:	11 96       	adiw	r26, 0x01	; 1
 bd2:	8d 91       	ld	r24, X+
 bd4:	9d 91       	ld	r25, X+
 bd6:	0d 90       	ld	r0, X+
 bd8:	bc 91       	ld	r27, X
 bda:	a0 2d       	mov	r26, r0
 bdc:	48 17       	cp	r20, r24
 bde:	59 07       	cpc	r21, r25
 be0:	6a 07       	cpc	r22, r26
 be2:	7b 07       	cpc	r23, r27
 be4:	80 f0       	brcs	.+32     	; 0xc06 <main+0x13e>
			{
				tasks[i].state = tasks[i].TickFct(tasks[i].state);
 be6:	f8 01       	movw	r30, r16
 be8:	80 81       	ld	r24, Z
 bea:	01 84       	ldd	r0, Z+9	; 0x09
 bec:	f2 85       	ldd	r31, Z+10	; 0x0a
 bee:	e0 2d       	mov	r30, r0
 bf0:	08 2e       	mov	r0, r24
 bf2:	00 0c       	add	r0, r0
 bf4:	99 0b       	sbc	r25, r25
 bf6:	09 95       	icall
 bf8:	d8 01       	movw	r26, r16
 bfa:	8c 93       	st	X, r24
				tasks[i].elapsedTime = 0; 
 bfc:	f8 01       	movw	r30, r16
 bfe:	15 82       	std	Z+5, r1	; 0x05
 c00:	16 82       	std	Z+6, r1	; 0x06
 c02:	17 82       	std	Z+7, r1	; 0x07
 c04:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i].elapsedTime += tasksGCD_period;
 c06:	d7 01       	movw	r26, r14
 c08:	15 96       	adiw	r26, 0x05	; 5
 c0a:	4d 91       	ld	r20, X+
 c0c:	5d 91       	ld	r21, X+
 c0e:	6d 91       	ld	r22, X+
 c10:	7c 91       	ld	r23, X
 c12:	18 97       	sbiw	r26, 0x08	; 8
 c14:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 c18:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 c1c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 c20:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 c24:	84 0f       	add	r24, r20
 c26:	95 1f       	adc	r25, r21
 c28:	a6 1f       	adc	r26, r22
 c2a:	b7 1f       	adc	r27, r23
 c2c:	f7 01       	movw	r30, r14
 c2e:	85 83       	std	Z+5, r24	; 0x05
 c30:	96 83       	std	Z+6, r25	; 0x06
 c32:	a7 83       	std	Z+7, r26	; 0x07
 c34:	b0 87       	std	Z+8, r27	; 0x08
 c36:	05 5f       	subi	r16, 0xF5	; 245
 c38:	1f 4f       	sbci	r17, 0xFF	; 255
	tasks[i].TickFct = &Combine_tick;
	
	PORTA = 0x08;
    while (1) 
    {
		for(i = 0; i < tasksNum; ++i)
 c3a:	0c 15       	cp	r16, r12
 c3c:	1d 05       	cpc	r17, r13
 c3e:	09 f0       	breq	.+2      	; 0xc42 <main+0x17a>
 c40:	bf cf       	rjmp	.-130    	; 0xbc0 <main+0xf8>
				tasks[i].state = tasks[i].TickFct(tasks[i].state);
				tasks[i].elapsedTime = 0; 
			}
			tasks[i].elapsedTime += tasksGCD_period;
		}
		while(!TimerFlag);
 c42:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <TimerFlag>
 c46:	88 23       	and	r24, r24
 c48:	e1 f3       	breq	.-8      	; 0xc42 <main+0x17a>
		TimerFlag = 0;
 c4a:	10 92 30 03 	sts	0x0330, r1	; 0x800330 <TimerFlag>
    }
 c4e:	b5 cf       	rjmp	.-150    	; 0xbba <main+0xf2>

00000c50 <__udivmodqi4>:
 c50:	99 1b       	sub	r25, r25
 c52:	79 e0       	ldi	r23, 0x09	; 9
 c54:	04 c0       	rjmp	.+8      	; 0xc5e <__udivmodqi4_ep>

00000c56 <__udivmodqi4_loop>:
 c56:	99 1f       	adc	r25, r25
 c58:	96 17       	cp	r25, r22
 c5a:	08 f0       	brcs	.+2      	; 0xc5e <__udivmodqi4_ep>
 c5c:	96 1b       	sub	r25, r22

00000c5e <__udivmodqi4_ep>:
 c5e:	88 1f       	adc	r24, r24
 c60:	7a 95       	dec	r23
 c62:	c9 f7       	brne	.-14     	; 0xc56 <__udivmodqi4_loop>
 c64:	80 95       	com	r24
 c66:	08 95       	ret

00000c68 <_exit>:
 c68:	f8 94       	cli

00000c6a <__stop_program>:
 c6a:	ff cf       	rjmp	.-2      	; 0xc6a <__stop_program>
